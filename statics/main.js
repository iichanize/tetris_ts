/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./statics/scripts/Mino.ts":
/*!*********************************!*\
  !*** ./statics/scripts/Mino.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar Mino = /** @class */ (function () {\r\n    function Mino(name, x, y) {\r\n        this.name = name;\r\n        this.shape = JSON.parse(JSON.stringify(Mino.shape_list[name]));\r\n        this.color = JSON.parse(JSON.stringify(Mino.color_list[name]));\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Mino.prototype.drawMino = function (ctx, tile_size) {\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 0; j < 5; j++) {\r\n                ctx.beginPath();\r\n                ctx.rect(this.x - 2 * tile_size + i * tile_size, this.y - 2 * tile_size + j * tile_size, tile_size, tile_size);\r\n                if (this.shape[i + j * 5] === 1) {\r\n                    ctx.fillStyle = this.color;\r\n                    ctx.fill();\r\n                    ctx.stroke();\r\n                    ctx.closePath();\r\n                }\r\n                else {\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Mino.prototype.spinLeft = function (field, frame_x, frame_y, tile_size, refreshDisplay) {\r\n        if (this.name !== \"O\") {\r\n            var temp = new Array(25);\r\n            for (var i = 0; i < 5; i++) {\r\n                for (var j = 0; j < 5; j++) {\r\n                    temp[i + j * 5] = this.shape[4 - j + i * 5];\r\n                }\r\n            }\r\n            var leftflag = true;\r\n            var idx_x = (this.x - frame_x) / tile_size + 1;\r\n            var idx_y = (this.y - frame_y) / tile_size + 1;\r\n            for (var i = 0; i < 5; i++) {\r\n                for (var j = 0; j < 5; j++) {\r\n                    if (temp[i + 5 * j] === 1 &&\r\n                        field[idx_x - 2 + i + (idx_y - 2 + j) * 12] === 1) {\r\n                        leftflag = false;\r\n                    }\r\n                }\r\n            }\r\n            if (leftflag) {\r\n                this.shape = temp;\r\n                refreshDisplay();\r\n            }\r\n        }\r\n    };\r\n    Mino.prototype.spinRight = function (field, frame_x, frame_y, tile_size, refreshDisplay) {\r\n        if (this.name !== \"O\") {\r\n            var temp = new Array(25);\r\n            for (var i = 0; i < 5; i++) {\r\n                for (var j = 0; j < 5; j++) {\r\n                    temp[i + j * 5] = this.shape[j + (4 - i) * 5];\r\n                }\r\n            }\r\n            var rightflag = true;\r\n            var idx_x = (this.x - frame_x) / tile_size + 1;\r\n            var idx_y = (this.y - frame_y) / tile_size + 1;\r\n            for (var i = 0; i < 5; i++) {\r\n                for (var j = 0; j < 5; j++) {\r\n                    if (temp[i + 5 * j] === 1 &&\r\n                        field[idx_x - 2 + i + (idx_y - 2 + j) * 12] === 1) {\r\n                        rightflag = false;\r\n                    }\r\n                }\r\n            }\r\n            if (rightflag) {\r\n                this.shape = temp;\r\n                refreshDisplay();\r\n            }\r\n        }\r\n    };\r\n    Mino.color_list = {\r\n        T: \"blueviolet\",\r\n        I: \"cyan\",\r\n        L: \"blue\",\r\n        J: \"orange\",\r\n        O: \"yellow\",\r\n        S: \"lime\",\r\n        Z: \"red\",\r\n    };\r\n    Mino.shape_list = {\r\n        T: [\r\n            0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n        I: [\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n        L: [\r\n            0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n        J: [\r\n            0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n        O: [\r\n            0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n        S: [\r\n            0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n        Z: [\r\n            0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        ],\r\n    };\r\n    Mino.name_list = [\"T\", \"I\", \"O\", \"L\", \"J\", \"S\", \"Z\"];\r\n    return Mino;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Mino);\r\n\n\n//# sourceURL=webpack://my-webpack-project/./statics/scripts/Mino.ts?");

/***/ }),

/***/ "./statics/scripts/index.ts":
/*!**********************************!*\
  !*** ./statics/scripts/index.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Mino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Mino */ \"./statics/scripts/Mino.ts\");\n\r\nvar wrapper = document.getElementById(\"id_wrapper\");\r\nvar canvas = document.getElementById(\"id_canvas\");\r\nvar ctx = canvas.getContext(\"2d\");\r\nvar tile_size;\r\nvar queue_mino = [];\r\nvar duration = 25;\r\nvar timer = 0;\r\nvar frame_x = 0;\r\nvar current_index = 0;\r\nvar game_end = false;\r\nvar frame_y = 0;\r\nvar field = [];\r\nvar buf_flag = true;\r\nvar collision_flag = false;\r\nfor (var i = 0; i <= 21; i++) {\r\n    for (var j = 0; j <= 11; j++) {\r\n        if (j === 0 || j === 11 || i === 21) {\r\n            field.push(1);\r\n        }\r\n        else {\r\n            field.push(0);\r\n        }\r\n    }\r\n}\r\nvar temp_field = [];\r\nfor (var i = 0; i <= 21; i++) {\r\n    for (var j = 0; j <= 11; j++) {\r\n        if (j === 0 || j === 11 || i === 21) {\r\n            temp_field.push(1);\r\n        }\r\n        else {\r\n            temp_field.push(0);\r\n        }\r\n    }\r\n}\r\nvar mino_shape = _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shape_list;\r\nvar mino_name = _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name_list;\r\nvar length_last_mino_name = _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name_list.length;\r\nvar score_counter = 0;\r\nvar REN = 0;\r\nvar flag_ren = false;\r\nvar total_score = 0;\r\nvar mino_buffer = [];\r\nvar setHold = function () {\r\n    if (mino_buffer[0] === undefined && buf_flag) {\r\n        var t = Math.floor(Math.random() * mino_name.length);\r\n        if (mino_name.length === 0) {\r\n            refill_mino_name();\r\n        }\r\n        queue_mino.push(new _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mino_name[t], frame_x + 14 * tile_size, 6 * tile_size));\r\n        queue_mino[current_index + 2].y = 3 * tile_size;\r\n        queue_mino[current_index + 1].y = 0;\r\n        queue_mino[current_index + 1].x = frame_x + 4 * tile_size;\r\n        mino_buffer[0] = queue_mino[current_index];\r\n        queue_mino.splice(current_index, 1);\r\n        mino_buffer[0].x = frame_x - 5 * tile_size;\r\n        mino_buffer[0].y = 3 * tile_size;\r\n        mino_buffer[0].shape = JSON.parse(JSON.stringify(mino_shape[mino_buffer[0].name]));\r\n        refreshDisplay();\r\n        mino_name.splice(t, 1);\r\n        buf_flag = false;\r\n    }\r\n    else if (buf_flag) {\r\n        var temp = queue_mino[current_index]; //queue_mino[current_index]とbufferを入れ替え\r\n        queue_mino[current_index] = mino_buffer[0];\r\n        mino_buffer[0] = temp;\r\n        mino_buffer[0].x = frame_x - 5 * tile_size;\r\n        mino_buffer[0].y = 3 * tile_size;\r\n        mino_buffer[0].shape = JSON.parse(JSON.stringify(mino_shape[mino_buffer[0].name]));\r\n        queue_mino[current_index].y = 0;\r\n        queue_mino[current_index].x = frame_x + 4 * tile_size;\r\n        refreshDisplay();\r\n        buf_flag = false;\r\n    }\r\n};\r\nvar stack = [];\r\nvar refreshQueue = function () {\r\n    var clear_mino = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    for (var i = 0; i < queue_mino.length; i++) {\r\n        if (JSON.stringify(queue_mino[i].shape) == JSON.stringify(clear_mino)) {\r\n            queue_mino.splice(i, 1);\r\n            current_index--;\r\n        }\r\n    }\r\n};\r\nvar checkFillLines = function () {\r\n    var counter = 0;\r\n    for (var i = 0; i < 20; i++) {\r\n        //各行について見る\r\n        counter = 0;\r\n        for (var j = 0; j < 10; j++) {\r\n            //合計して10なら埋まっている状態\r\n            counter += field[j + 1 + (i + 1) * 12];\r\n        }\r\n        if (counter === 10) {\r\n            score_counter++;\r\n            //行iが埋まっているとき\r\n            for (var g = i; g >= 0; g--) {\r\n                for (var h = 0; h < 10; h++) {\r\n                    field[h + 1 + (g + 1) * 12] = field[h + 1 + g * 12];\r\n                }\r\n            }\r\n            stack.push(i);\r\n            for (var k = 0; k < queue_mino.length - 3; k++) {\r\n                //フィールド上に存在しているミノを確認\r\n                var idx_x = (queue_mino[k].x - frame_x) / tile_size + 1;\r\n                var idx_y = (queue_mino[k].y - frame_y) / tile_size + 1;\r\n                if (idx_y - 1 + 2 < i) {\r\n                    queue_mino[k].y += tile_size;\r\n                }\r\n                else {\r\n                    for (var l = 0; l < 5; l++) {\r\n                        //ミノを構成している5*5のマスを確認\r\n                        for (var m = 5; m >= 0; m--) {\r\n                            if (idx_y - 1 - 2 + m <= i) {\r\n                                if (l + (m - 1) * 5 >= 0) {\r\n                                    queue_mino[k].shape[l + m * 5] = queue_mino[k].shape[l + (m - 1) * 5];\r\n                                }\r\n                                else {\r\n                                    queue_mino[k].shape[l + m * 5] = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            refreshDisplay();\r\n        }\r\n    }\r\n    if (score_counter > 0) {\r\n        flag_ren = true;\r\n    }\r\n    else {\r\n        flag_ren = false;\r\n    }\r\n    total_score += score_counter * score_counter * 500;\r\n    total_score += score_counter * score_counter * REN * 100;\r\n    score_counter = 0;\r\n};\r\nvar getSize = function () {\r\n    canvas.width = wrapper.offsetWidth;\r\n    tile_size = Math.floor(canvas.width * 0.03);\r\n    canvas.height = tile_size * 21;\r\n};\r\nvar drawBG = function () {\r\n    var frame_width = Math.floor(canvas.width * 0.3 + 2 * tile_size);\r\n    frame_x = Math.floor(canvas.width * 0.5 - frame_width * 0.5);\r\n    frame_y = 0;\r\n    writeString(\"HOLD\", frame_x - 5 * tile_size, tile_size, \"20pt Arial\", [0, 0, 0, 1], [0, 0, 0, 0]);\r\n    writeString(\"NEXT\", frame_x + 14 * tile_size, tile_size, \"20pt Arial\", [0, 0, 0, 1], [0, 0, 0, 0]);\r\n    writeString(\"SCORE\", frame_x + 14 * tile_size, 19 * tile_size, \"15pt Arial\", [0, 0, 0, 1], [0, 0, 0, 0]);\r\n    writeString(total_score.toString(), frame_x + 14 * tile_size, 20 * tile_size, \"15pt Arial\", [0, 0, 0, 1], [0, 0, 0, 0]);\r\n    for (var i = 0; i < 10; i++) {\r\n        for (var j = 0; j < 20; j++) {\r\n            ctx.beginPath();\r\n            ctx.rect(frame_x + i * tile_size, frame_y + j * tile_size, tile_size, tile_size);\r\n            ctx.fillStyle = \"azure\";\r\n            ctx.strokeStyle = \"black\";\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n    for (var i = 0; i < 20; i++) {\r\n        ctx.beginPath();\r\n        ctx.rect(frame_x - tile_size, frame_y + i * tile_size, tile_size, tile_size);\r\n        ctx.rect(frame_x + 10 * tile_size, frame_y + i * tile_size, tile_size, tile_size);\r\n        ctx.fillStyle = \"gray\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n    for (var i = -1; i < 11; i++) {\r\n        ctx.beginPath();\r\n        ctx.rect(frame_x + i * tile_size, frame_y + 20 * tile_size, tile_size, tile_size);\r\n        ctx.fillStyle = \"gray\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n};\r\nvar applyMinosToField = function () {\r\n    for (var s = 0; s < 10; s++) {\r\n        for (var t = 0; t < 21; t++) {\r\n            temp_field[s + 1 + t * 12] = 0;\r\n        }\r\n    }\r\n    for (var i = 0; i < queue_mino.length - 2; i++) {\r\n        var idx_x = (queue_mino[i].x - frame_x) / tile_size + 1;\r\n        var idx_y = (queue_mino[i].y - frame_y) / tile_size + 1;\r\n        if (collision_flag === false) {\r\n            for (var a = 0; a < 5; a++) {\r\n                for (var b = 0; b < 5; b++) {\r\n                    if (queue_mino[i].shape[a + 5 * b] === 1) {\r\n                        temp_field[idx_x - 2 + a + (idx_y - 2 + b) * 12] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nvar writeString = function (str, x, y, font, fontcolor, strokecolor) {\r\n    ctx.beginPath();\r\n    ctx.font = font;\r\n    ctx.fillStyle = \"rgba(\" + fontcolor + \")\";\r\n    ctx.strokeStyle = \"rgba(\" + strokecolor + \")\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.fillText(str, x, y, canvas.width);\r\n    ctx.strokeText(str, x, y, canvas.width);\r\n    ctx.closePath();\r\n};\r\nvar refill_mino_name = function () {\r\n    mino_name.push(\"T\");\r\n    mino_name.push(\"I\");\r\n    mino_name.push(\"O\");\r\n    mino_name.push(\"L\");\r\n    mino_name.push(\"J\");\r\n    mino_name.push(\"S\");\r\n    mino_name.push(\"Z\");\r\n};\r\nvar checkREN = function () {\r\n    if (length_last_mino_name != mino_name.length) {\r\n        if (flag_ren) {\r\n            REN++;\r\n        }\r\n        else {\r\n            REN = 0;\r\n        }\r\n        length_last_mino_name = mino_name.length;\r\n    }\r\n};\r\nvar drawDisplay = function () {\r\n    if (timer >= duration) {\r\n        checkFillLines();\r\n        applyMinosToField();\r\n        refreshQueue();\r\n        checkREN();\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        drawBG();\r\n        var idx_x = (queue_mino[current_index].x - frame_x) / tile_size + 1;\r\n        var idx_y = (queue_mino[current_index].y - frame_y) / tile_size + 1;\r\n        for (var a = 0; a < 5; a++) {\r\n            for (var b = 0; b < 5; b++) {\r\n                if (queue_mino[current_index].shape[a + 5 * b] === 1 && field[idx_x - 2 + a + (idx_y - 2 + b + 1) * 12] === 1) {\r\n                    collision_flag = true;\r\n                    console.clear();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (field[5] === 1) {\r\n            console.log(\"END\");\r\n            game_end = true;\r\n        }\r\n        else if (queue_mino[current_index].y + tile_size < 20 * tile_size && collision_flag === false) {\r\n            queue_mino[current_index].y += tile_size;\r\n        }\r\n        else {\r\n            collision_flag = false;\r\n            buf_flag = true;\r\n            field = JSON.parse(JSON.stringify(temp_field)); //配列のディープコピーはJSON.parse(JSON.stringify())で実装できる\r\n            for (var i = 0; i < 22; i++) {\r\n                console.log((\"00\" + i).slice(-2), field[i * 12], field[i * 12 + 1], field[i * 12 + 2], field[i * 12 + 3], field[i * 12 + 4], field[i * 12 + 5], field[i * 12 + 6], field[i * 12 + 7], field[i * 12 + 8], field[i * 12 + 9], field[i * 12 + 10], field[i * 12 + 11]);\r\n            }\r\n            if (mino_name.length === 0) {\r\n                refill_mino_name();\r\n            }\r\n            var t = Math.floor(Math.random() * mino_name.length);\r\n            queue_mino.push(new _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mino_name[t], frame_x + 14 * tile_size, 6 * tile_size));\r\n            queue_mino[current_index + 2].y = 3 * tile_size;\r\n            queue_mino[current_index + 1].y = -tile_size;\r\n            queue_mino[current_index + 1].x = frame_x + 4 * tile_size;\r\n            mino_name.splice(t, 1);\r\n            current_index++;\r\n        }\r\n        for (var i = 0; i < queue_mino.length; i++) {\r\n            queue_mino[i].drawMino(ctx, tile_size);\r\n        }\r\n        if (mino_buffer[0] !== undefined) {\r\n            mino_buffer[0].drawMino(ctx, tile_size);\r\n        }\r\n        if (field[5] === 1) {\r\n            ctx.beginPath();\r\n            ctx.fillStyle = \"rgba(10, 10, 10, 0.3)\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            ctx.closePath();\r\n            writeString(\"GAME OVER\", canvas.width / 2, canvas.height / 2, \"50pt Arial\", [255, 255, 255, 1], [0, 0, 0, 1]);\r\n        }\r\n        timer = 0;\r\n    }\r\n};\r\nvar loop = function (ts) {\r\n    if (!game_end) {\r\n        timer += 1;\r\n        drawDisplay();\r\n        window.requestAnimationFrame(function (ts) { return loop(ts); });\r\n    }\r\n};\r\nwindow.requestAnimationFrame(function (ts) { return loop(ts); });\r\nvar refreshDisplay = function () {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    drawBG();\r\n    for (var i = 0; i < queue_mino.length; i++) {\r\n        queue_mino[i].drawMino(ctx, tile_size);\r\n    }\r\n    if (mino_buffer[0] !== undefined) {\r\n        mino_buffer[0].drawMino(ctx, tile_size);\r\n    }\r\n};\r\nwindow.addEventListener(\"resize\", function () {\r\n    getSize();\r\n    drawDisplay();\r\n});\r\nwindow.addEventListener(\"load\", function () {\r\n    getSize();\r\n    drawBG();\r\n    var t = Math.floor(Math.random() * mino_name.length);\r\n    queue_mino.push(new _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mino_name[t], frame_x + 4 * tile_size, -tile_size));\r\n    mino_name.splice(t, 1);\r\n    t = Math.floor(Math.random() * mino_name.length);\r\n    queue_mino.push(new _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mino_name[t], frame_x + 14 * tile_size, 3 * tile_size));\r\n    mino_name.splice(t, 1);\r\n    t = Math.floor(Math.random() * mino_name.length);\r\n    queue_mino.push(new _Mino__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mino_name[t], frame_x + 14 * tile_size, 6 * tile_size));\r\n    mino_name.splice(t, 1);\r\n});\r\ndocument.addEventListener(\"keydown\", KeyDownFunc);\r\nfunction KeyDownFunc(e) {\r\n    if (e.key === \"ArrowLeft\") {\r\n        var leftflag = true;\r\n        var idx_x = (queue_mino[current_index].x - frame_x) / tile_size + 1;\r\n        var idx_y = (queue_mino[current_index].y - frame_y) / tile_size + 1;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 0; j < 5; j++) {\r\n                if (queue_mino[current_index].shape[i + 5 * j] === 1 && field[idx_x - 2 + i - 1 + (idx_y - 2 + j) * 12] === 1) {\r\n                    leftflag = false;\r\n                }\r\n            }\r\n        }\r\n        if (leftflag) {\r\n            queue_mino[current_index].x -= tile_size;\r\n            refreshDisplay();\r\n        }\r\n    }\r\n    else if (e.key === \"ArrowRight\") {\r\n        var rightflag = true;\r\n        var idx_x = (queue_mino[current_index].x - frame_x) / tile_size + 1;\r\n        var idx_y = (queue_mino[current_index].y - frame_y) / tile_size + 1;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 0; j < 5; j++) {\r\n                if (queue_mino[current_index].shape[i + 5 * j] === 1 && field[idx_x - 2 + i + 1 + (idx_y - 2 + j) * 12] === 1) {\r\n                    rightflag = false;\r\n                }\r\n            }\r\n        }\r\n        if (rightflag) {\r\n            queue_mino[current_index].x += tile_size;\r\n            refreshDisplay();\r\n        }\r\n    }\r\n    else if (e.key === \"ArrowDown\") {\r\n        var downflag = true;\r\n        var idx_x = (queue_mino[current_index].x - frame_x) / tile_size + 1;\r\n        var idx_y = (queue_mino[current_index].y - frame_y) / tile_size + 1;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 0; j < 5; j++) {\r\n                if (queue_mino[current_index].shape[i + 5 * j] === 1 && field[idx_x - 2 + i + (idx_y - 2 + j + 1) * 12] === 1) {\r\n                    downflag = false;\r\n                }\r\n            }\r\n        }\r\n        if (downflag) {\r\n            queue_mino[current_index].y += tile_size;\r\n            timer = 0;\r\n            total_score += 10;\r\n            refreshDisplay();\r\n        }\r\n    }\r\n    else if (e.key === \"z\") {\r\n        queue_mino[current_index].spinLeft(field, frame_x, frame_y, tile_size, refreshDisplay);\r\n    }\r\n    else if (e.key === \"x\") {\r\n        queue_mino[current_index].spinRight(field, frame_x, frame_y, tile_size, refreshDisplay);\r\n    }\r\n    else if (e.key === \"a\") {\r\n        setHold();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://my-webpack-project/./statics/scripts/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./statics/scripts/index.ts");
/******/ 	
/******/ })()
;